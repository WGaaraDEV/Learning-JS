/*
    Escrito por: üë®‚Äçüî¨ Cau√£ ¬ª FridayLab‚Ñ¢    
    Cau√£ apresenta:
    Projeto 002 ¬ª Fundamentos do JavaScript - Parte 2.
*/

/*
     Coment√°rios:
    Voc√™ pode colocar coment√°rios em c√≥digos JavaScript, assim como no CSS:
     Exemplo:
    // Coment√°rio qualquer.
    Isso tudo √© um coment√°rio.
*/

/*
     Operadores:
    Um operador √© um s√≠mbolo matem√°tico que produz um resultado baseado em dois valores (ou
    vari√°veis). Na tabela a seguir, voc√™ pode ver alguns dos operadores mais simples, alem de
    alguns exemplos para experimentar no Node.JS
    
     Adi√ß√£o X Concatena√ß√£o {
         Explica√ß√£o: "Usado para somar dois n√∫meros ou juntar duas strings.",
         S√≠mbolo(s): "+",
         Exemplos: [
             6 + 9,
             "Hello" + " world!";
         ]
     },
     Subtrair X Multiplicar X Dividir {
         Explica√ß√£o: "Fazem exatamente o que voc√™ espera que eles fa√ßam na matem√°tica b√°sica.",
         S√≠mbolo(s): [
             -,
             *,
             /
         ]
         Exemplos: [
             9 - 3,
             8 * 2, // no JS a multiplica√ß√£o √© representada por um asterisco.
             9 /3
         ]
     },
     Operador de atribui√ß√£o {
         Explica√ß√£o: "Voc√™ j√° viu essa, ela associa um valor a uma vari√°vel.",
         S√≠mbolo(s): = 
         Exemplos: 
             var myVar = "Bob"
     },
     Operador de igualdade {
         Explica√ß√£o: "Faz um teste para ver se dois valores s√£o iguais um ao outro, retornando um resultado true/false (booleano).",
         S√≠mbolo(s): ===
         Exemplos: 
             var myVariable = 3;
             myVariable === 4; // obviamente ir√° retornar false, pois o valor declarado nesta vari√°vel n√£o √© igual a 4.
     },
     Nega√ß√£o, n√£o igual {
         Explica√ß√£o: "Retorna o valor l√≥gico oposto do sinal; transforma um true em um false, etc. Quando usado junto com o operador de igualdade, o operador de nega√ß√£o testa se os valores s√£o diferentes.",
         S√≠mbolo(s): [
             !,
             !==
         ]
         Exemplos: 
         var myFalse = 3;
         !(myFalse === 3) // aqui estamos perguntando: myFalse N√ÉO seria igual a 3? O retorno √© "false"
         porque myFalse √© DE FATO igual a 3.
     }
     H√° v√°rios outros operadores para explorar, s√©rio, mas esses s√£o suficientes, por enquanto...

     Nota:
        Misturar tipos de dados pode levar a resultados estranhos (inesperados) quando uma opera√ß√£o
        √© executada, portanto, tome cuidado para declarar suas vari√°veis corretamente, e voc√™ obter√°
        os resultados esperados. Por exemplo, teste em seu NODE.JS o seguinte c√≥digo:
        "35" + "25". Por que voc√™ n√£o teve o resultado esperado? Porque as aspas transformam os n√∫meros
        em strings, voc√™ acabou concatenando (unindo) strings em vez de somar os n√∫meros. Se voc√™ digitar
        35 + 25, voc√™ obtera o resultado esperado.
*/
